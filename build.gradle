plugins {
    id 'java'
    id 'fabric-loom' version '1.5-SNAPSHOT'
    id 'maven-publish'
}

allprojects {
    apply(plugin: "java")
    apply(plugin: "fabric-loom")
    apply(plugin: "maven-publish")
    version = rootProject.mod_version
    group = rootProject.maven_group

    dependencies {
        // To change the versions see the gradle.properties file
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings "net.fabricmc:yarn:${rootProject.yarn_mappings}:v2"
        modImplementation "net.fabricmc:fabric-loader:${rootProject.loader_version}"

        // Fabric API. This is technically optional, but you probably want it anyway.
        modImplementation "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_version}"

        // Uncomment the following line to enable the deprecated Fabric API modules.
        // These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

        // modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"

        for(a in ["base","level","chunk","block","entity"]) {
            modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-${a}:${rootProject.cca_version}")
        }
        modImplementation "xyz.nucleoid:fantasy:${rootProject.fantasy_version}+${rootProject.minecraft_version}"
    }

    processResources {
        inputs.property "version", project.version

        filesMatching("fabric.mod.json") {
            expand "version": project.version
        }
    }
    base {
        archivesName = rootProject.archives_base_name
    }
    loom {
        runs {
            // This adds a new gradle task that runs the datagen API: "gradlew runDatagen"
            datagen {
                inherit server
                name "Data Generation"
                vmArg "-Dfabric-api.datagen"
                vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
                vmArg "-Dfabric-api.datagen.modid=canon"

                runDir "build/datagen"
            }
        }
    }

// Add the generated resources to the main source set
    sourceSets {
        main {
            resources {
                srcDirs += [
                        'src/main/generated'
                ]
            }
        }
    }
    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.

        maven {
            name = 'Ladysnake Mods'
            url = 'https://maven.ladysnake.org/releases'
        }
        maven { url = 'https://maven.nucleoid.xyz/' }
    }
    java {
        // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
        // if it is present.
        // If you remove this line, sources will not be generated.
        withSourcesJar()

        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    jar {
        from("LICENSE") {
            rename { "${it}_${rootProject.base.archivesName.get()}" }
        }
    }

    // configure the maven publication
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }

        // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
        repositories {
            // Add repositories to publish to here.
            // Notice: This block does NOT have the same function as the block in the top level.
            // The repositories here will be used for publishing your artifact, not for
            // retrieving dependencies.
        }
    }

}
